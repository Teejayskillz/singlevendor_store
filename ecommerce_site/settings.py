"""
Django settings for ecommerce_site project.

Generated by 'django-admin startproject' using Django 4.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url 
from dotenv import load_dotenv 
import pymysql

load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'ecm.lagoswebdev.com']
CART_SESSION_ID = 'cart'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'products',
    'cart',
    'accounts',
    'orders',
    'crispy_forms',           # Add this
    'crispy_bootstrap5',      # Add this
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ecommerce_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')], # Add this line
        'APP_DIRS': True, # Keep this so Django still looks in app-specific templates/ directories
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'cart.context_processors.cart',
                'ecommerce_site.context_processors.search_form_processor', 
                
            ],
        },
    },
]

WSGI_APPLICATION = 'ecommerce_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(
        # Use DATABASE_URL from environment variable
        default=os.environ.get('DATABASE_URL'),
        conn_max_age=600
    )
}
pymysql.install_as_MySQLdb()


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'


# Directories where Django will look for static files during development
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# The absolute path to the directory where collectstatic will collect static files for deployment
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Media files (for user-uploaded content, like product images)
MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Paystack API Keys
# IMPORTANT: Use environment variables in production!
#PAYSTACK_PUBLIC_KEY = 'pk_test_3ced03cc50bd316093092a0bdd89227aa2328827' # Replace with your test public key
#PAYSTACK_SECRET_KEY = 'sk_test_9ee98b575bdc50709bd05ff3e3aadf66c416a71d' # Replace with your test secret key

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'orders': {  # Or whatever your app name is
            'handlers': ['console'],
            'level': 'DEBUG',  # Set to DEBUG to see the detailed output
        },
    },
}

FLUTTERWAVE_PUBLIC_KEY = os.environ.get('FLUTTERWAVE_PUBLIC_KEY')
FLUTTERWAVE_SECRET_KEY = os.environ.get('FLUTTERWAVE_SECRET_KEY')
# Optionally, if you use it in direct charges or complex scenarios:
FLUTTERWAVE_ENCRYPTION_KEY = os.environ.get('FLUTTERWAVE_ENCRYPTION_KEY')
FLUTTERWAVE_BASE_URL = "https://api.flutterwave.com/v3" # Base URL for Flutterwave API


LOGOUT_REDIRECT_URL = '/'
PASSWORD_CHANGE_REDIRECT_URL = 'accounts:profile_edit' 

# ecommerce_site/settings.py

# ... other settings ...

# Email Configuration for Password Reset (IMPORTANT FOR LOCAL TESTING)
#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# This will print emails to your console when Django tries to send them.

# For production, you would configure actual SMTP settings, e.g.:
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'mail.lagoswebdev.com'
EMAIL_PORT = 465 
EMAIL_USE_TLS = False 
EMAIL_USE_SSL = True 
EMAIL_HOST_USER = 'contact@lagoswebdev.com'
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD') # <-- GET FROM ENV VAR!
DEFAULT_FROM_EMAIL = 'contact@lagoswebdev.com'

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5" # Tells Crispy Forms which template packs are allowed
CRISPY_TEMPLATE_PACK = "bootstrap5"          # Sets the default template pack to use
